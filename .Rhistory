labs(x = "Species", y = "Body Mass")
#| code-fold: true
penguins |> ggplot(aes(x=species, y = body_mass_g)) +
geom_boxplot() +
geom_jitter() +
labs(x = "Species", y = "Body Mass")
shuffle <- function(x){n <- length(x); return(sample(x, n))}
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
shuffle <- function(x){n <- length(x); return(sample(x, n))}
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
shuffle <- function(x){n <- length(x); return(sample(x, n))}
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
shuffle <- function(x){n <- length(x); return(sample(x, n))}
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
shuffle <- function(x){n <- length(x); return(sample(x, n))}
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
penguins |> ggplot(aes(x = species, y = shuffle(body_mass_g))) +
theme_bw() +labs(x = "Species", y = "Body Mass") + theme(axis.text = element_text(size = 18)) +
geom_jitter()
penguins |> ggplot(aes(x = species, y = shuffle(body_mass_g))) +
labs(x = "Species", y = "Body Mass") +
geom_jitter() +
geom_jitter(aes(species, body_mass_g))
penguins |> ggplot(aes(x = species, y = shuffle(body_mass_g))) +
labs(x = "Species", y = "Body Mass") +
geom_jitter() +
geom_jitter(aes(species, body_mass_g), col = "red")
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(col = "red") +
geom_jitter(aes(species, shuffle(body_mass_g)))
penguins |> ggplot() +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g)))
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(col = "red") +
geom_jitter(aes(species, shuffle(body_mass_g)))
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(col = "red") +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g)))
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(col = "red")
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(col = "red")
factorial(100)
factorial(10)
# Chunk 1
#| code-fold: false
library(tidyverse)
library(palmerpenguins)
theme_set(theme_bw())
tuesdata <- tidytuesdayR::tt_load(2020, week = 28)
coffee_ratings <- tuesdata$coffee_ratings
coffee_aroma <- coffee_ratings |> filter(aroma > 5.5)
shuffle <- function(x){
n <- length(x)
return(sample(x, n))
}
penguins <- penguins |> drop_na()
# Chunk 2
a1 <- data.frame(
x = c(2.5,3.5),
y = c(41, 41),
label = c("Yes", "No")
)
a2 <- data.frame(
x = c(1.9),
y = c(25, 35),
label = c("False", "True")
)
a3 <- tibble(x = c(1.7,3),
y = c(30, 43),
label = c("H0", "Reject H0"))
yay <- tibble(x = c(2.5, 3.5),
y = c(25, 35),
label = c("Yay!", "Yay!"))
type1 <- tibble(x = c(2.5, 3.5),
y = c(36.5, 26.5),
label = c("Type I Error", "Type II Error"))
type2 <- tibble(x = c(3.5, 2.5),
y = c(24.5, 34.5),
label = c("beta", "alpha"))
# basic graph
p <- ggplot() + theme_void()
# Add rectangles
p + annotate("rect",
xmin=c(2,3), xmax=c(3,4),
ymin=c(20,20), ymax=c(30,30),
alpha=0.2, color="green", fill="green") +
annotate("rect",
xmin=c(2,3), xmax=c(3,4),
ymin=c(30,30), ymax=c(40,40),
alpha=0.2, color="red", fill="red") +
annotate("rect",
xmin=c(3,2), xmax=c(4,3),
ymin=c(30, 20), ymax=c(40, 30),
alpha=0.8, color="royalblue", fill="royalblue") +
geom_text(data=a1, aes(x=x, y=y, label=label),
size=10 , fontface="bold" ) +
geom_text(data=a3, aes(x=x, y=y, label=label),
size=10 , fontface="bold.italic" ) +
geom_text(data=a2, aes(x=x, y=y, label=label),
size=10, angle = 90, fontface="bold" ) +
geom_text(data=yay, aes(x=x, y=y, label=label),
size=10, fontface="bold.italic" ) +
geom_text(data=type1, aes(x=x, y=y, label=label),
size=10, fontface="bold") +
geom_text(data=type2, aes(x=x, y=y, label=label),
size=10, fontface="bold", parse = T )
# Chunk 3
x <- seq(-4, 4, length.out = 1000)
xx <- seq(-1, 7, length.out = 1000)
dt_one<-function(x){
y <- dnorm(x)
y[x < qnorm(.94)] <-NA
return(y)
}
dt_two<-function(x){
y <- dnorm(x, mean = 3)
y[x > 1.645] <-NA
return(y)
}
df1 <- tibble(x = x, y = dnorm(x))
df2 <- tibble(x = xx, y = dnorm(xx, mean = 3))
a1 <- tibble(x = c(0,3), y = c(0.43, 0.43), label = c("H0", "H1"))
a2 <- tibble(x = c(2.05,1.25), y = c(0.02, 0.02), label = c(paste("alpha"), "beta"))
df1 |>
ggplot(aes(x, y)) +
stat_function(fun = dt_one, geom = "area", fill = "red") +
geom_line() +
geom_line(aes(x, y), df2) +
stat_function(fun = dt_two, geom = "area", fill = "green") +
geom_vline(aes(xintercept = 1.645), lwd = 1.5) +
geom_text(data=a1, aes(x=x,y=y, label=label),
size=14 , fontface="bold.italic" ) +
geom_text(data=a2, aes(x=x,y=y, label=label),
size=10 , fontface="bold.italic", parse = T) +
theme_bw()
# Chunk 4
x <- seq(-4, 4, length.out = 1000)
xx <- seq(-1, 7, length.out = 1000)
dt_one<-function(x){
y <- dnorm(x)
y[x < qnorm(.94)] <-NA
return(y)
}
dt_two<-function(x){
y <- dnorm(x, mean = 3)
y[x > 1.645] <-NA
return(y)
}
df1 <- tibble(x = x, y = dnorm(x))
df2 <- tibble(x = xx, y = dnorm(xx, mean = 3))
a1 <- tibble(x = c(0,3), y = c(0.43, 0.43), label = c("H0", "H1"))
a2 <- tibble(x = c(2.05,1.25), y = c(0.02, 0.02), label = c(paste("alpha"), "beta"))
df1 |>
ggplot(aes(x, y)) +
stat_function(fun = dt_one, geom = "area", fill = "red") +
geom_line() +
geom_line(aes(x, y), df2) +
stat_function(fun = dt_two, geom = "area", fill = "green") +
geom_vline(aes(xintercept = 1.645), lwd = 1.5) +
geom_text(data=a1, aes(x=x,y=y, label=label),
size=14 , fontface="bold.italic" ) +
geom_text(data=a2, aes(x=x,y=y, label=label),
size=10 , fontface="bold.italic", parse = T) +
theme_bw()
# Chunk 5
#| code-fold: show
x <- rnorm(24, 3, 3)
# Chunk 7
alpha <- 0.05
cv <- qt(1-alpha/2, 23)
t_stat_sim <- function(i, mu){
x <- rnorm(24, mu, 3)
tt <- (mean(x) - 6)/(sd(x)/sqrt(24))
return(cv < abs(tt))
}
mus <- 0:12
powers <- c()
for(i in 1:13){
t_dist <- sapply(1:100000, t_stat_sim, mu = mus[i])
powers <- c(powers, mean(t_dist))
}
tibble(x = mus, y = powers) |>
ggplot(aes(x, y)) +
geom_line() +
ylab("Power") +
xlab("Alternative")
# Chunk 8
#| code-fold: show
x <- 1:20
sample(x, 10, replace = T)
# Chunk 9
#| code-fold: show
x <- 1:20
sample(x, 10, replace = F)
# Chunk 10
#| code-fold: false
#| echo: true
factorial(100)
# Chunk 11
#| code-fold: true
penguins |> ggplot(aes(x=species, y = body_mass_g)) +
geom_boxplot() +
geom_jitter() +
labs(x = "Species", y = "Body Mass")
# Chunk 12
#| code-fold: true
penguins |> ggplot() +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g)))
# Chunk 13
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(col = "red") +
geom_jitter(aes(species, shuffle(body_mass_g)))
# Chunk 14
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(col = "red")
#| code-fold: true
penguins |> ggplot(aes(x = species, y = body_mass_g)) +
labs(x = "Species", y = "Body Mass") +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(aes(species, shuffle(body_mass_g))) +
geom_jitter(col = "red")
pengiuns |> aov(body_mass_g ~ species, data = _) |> anova()
penguins <- penguins |> drop_na()
pengiuns |> aov(body_mass_g ~ species, data = _) |> anova()
penguins
penguins |> aov(body_mass_g ~ species, data = _) |> anova()
test <- penguins |> aov(body_mass_g ~ species, data = _) |> anova()
test
test$`F value`
test$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
ff <- penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
f_sim <- function(i){
ff <- penguins |>
aov(shuffle(body_mass_g) ~ species, data = _) |>
anova() |>
_$`F value`[1]
return(ff)
}
f_dist <- replicate(10000, f_sim(1))
f_stat <- penguins |>
aov(body_mass_g ~ species, data = _) |>
anova() |>
_$`F value`[1]
f_dist
f_stat
mean(f_stat < f_dist)
sum(f_stat < f_dist) + 1 / (length(f_dist) + 1)
?theme_set
#| code-fold: false
library(tidyverse)
library(palmerpenguins)
theme_set(theme_bw())
theme_update(axis.title = element_text(size = 24))
tuesdata <- tidytuesdayR::tt_load(2020, week = 28)
coffee_ratings <- tuesdata$coffee_ratings
coffee_aroma <- coffee_ratings |> filter(aroma > 5.5)
shuffle <- function(x){
n <- length(x)
return(sample(x, n))
}
penguins <- penguins |> drop_na()
coffee_aroma |> ggplot(aes(x=aroma, y = flavor)) +
geom_point() + theme_bw() +
theme() +
geom_smooth(method = "lm", se = F)
coffee_aroma |> ggplot(aes(x=aroma, y = flavor)) +
geom_point() + theme_bw() +
geom_smooth(method = "lm", se = F)
tibble(x= f_dist) |>
ggplot(aes(x, y = ..density..)) +
geom_histogram()
tibble(x= f_dist) |>
ggplot(aes(x, y = ..density..)) +
geom_histogram() +
geom_vline(xintercept = f_stat)
coffee_aroma |> ggplot(aes(x=aroma, y = shuffle(flavor))) +
geom_point() + theme_bw() +
geom_smooth(method = "lm", se = F)
coffee_aroma |> ggplot() +
geom_smooth(method = "lm", se = F)
coffee_aroma |> ggplot() +
geom_smooth(mapping = aes(aroma, flavor), method = "lm", se = F)
coffee_aroma |> ggplot() +
geom_smooth(mapping = aes(aroma, flavor), method = "lm", se = F, col = "red")
coffee_aroma |> ggplot() +
geom_smooth(mapping = aes(aroma, flavor), method = "lm", se = F, col = "red") +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F)
coffee_aroma |> ggplot() +
geom_smooth(mapping = aes(aroma, flavor), method = "lm", se = F, col = "red") +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F)
coffee_aroma |> ggplot() +
geom_smooth(mapping = aes(aroma, flavor), method = "lm", se = F, col = "red") +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F) +
geom_smooth(mapping = aes(aroma, shuffle(flavor)), method = "lm", se = F)
coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
summary()
test <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
summary()
names(test)
test$coefficients
test$coefficients[2,1]
test <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
summary() |>
_$coefficients[2,1]
test
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
summary() |>
_["coefficients"][2,1]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
summary() |>
_["coefficients"]
f_stat
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _)
f_stat
f_stat |> names()
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_[[1]]
f_stat
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_[[1]][2]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_[[1]] |> _[2]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_[[1]]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$coefficients
f_stat
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$coefficients[2]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$coefficients |>
_[2]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$`coefficients`[2]
f_stat <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$`coefficients`[2]
f_sim <- function(i){
ff <- coffee_aroma |>
lm(flavor ~ aroma, data = _) |>
_$`coefficients`[2]
return(ff)
}
f_dist <- replicate(10000, f_sim(1))
tibble(x= f_dist) |>
ggplot(aes(x, y = ..density..)) +
geom_histogram() +
geom_vline(xintercept = f_stat)
sum(f_stat < f_dist) + 1 / (length(f_dist) + 1)
f_dist
f_sim <- function(i){
ff <- coffee_aroma |>
lm(shuffle(flavor) ~ aroma, data = _) |>
_$`coefficients`[2]
return(ff)
}
f_dist <- replicate(10000, f_sim(1))
tibble(x= f_dist) |>
ggplot(aes(x, y = ..density..)) +
geom_histogram() +
geom_vline(xintercept = f_stat)
sum(f_stat < f_dist) + 1 / (length(f_dist) + 1)
