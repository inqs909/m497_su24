ggplot(aes(x=x, y = ..density..)) +
geom_histogram() +
geom_line(data = tibble(x = xx, y = dnorm(xx, 10, sqrt(40/10000))),
aes(x, y))
#| code-fold: true
#| eval: false
norm <- function(x){
rgamma(10000, shape = 5, scale = 2)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
xx <- seq(min(Xbar)-.1, max(Xbar)+.1, length.out = 100)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x, y = ..density..)) +
geom_histogram() +
geom_line(data = tibble(x = xx, y = dnorm(xx, 10, sqrt(20/10000))),
aes(x, y))
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000, location = 5, scale = 2)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
xx <- seq(min(Xbar)-.1, max(Xbar)+.1, length.out = 100)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x, y = ..density..)) +
geom_histogram()
library(ggplot2)
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000, location = 5, scale = 2)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x, y = ..density..)) +
geom_histogram()
library(tidyverse)
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000, location = 5, scale = 2)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x, y = ..density..)) +
geom_histogram()
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram()
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram()
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 10)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000, location = -1)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
Xbar
#| code-fold: true
#| eval: false
norm <- function(x){
rgamma(10000, shape = 5, scale = 2)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
xx <- seq(min(Xbar)-.1, max(Xbar)+.1, length.out = 100)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x, y = ..density..)) +
geom_histogram() +
geom_line(data = tibble(x = xx, y = dnorm(xx, 10, sqrt(20/10000))),
aes(x, y))
Xbar
#| code-fold: true
#| eval: false
norm <- function(x){
rcauchy(10000, location = -1)
}
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
X <- sapply(1:1000, norm)
Xbar <- apply(X, 2, mean)
Xbar |> tibble(x = _) |>
ggplot(aes(x=x)) +
geom_histogram(bins = 100)
library(tidyverse)
x <- seq(-6, 6 length.out = 1000)
x <- seq(-6, 6, length.out = 1000)
x |> (\(.) tibble(x = ., y = dnorm(.))) |>
ggplot(aes(x, y)) +
geom_line()
x <- seq(-6, 6, length.out = 1000)
x <- seq(-6, 6, length.out = 1000)
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line()
x <- seq(-4, 4, length.out = 1000)
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
theme_bw()
?rweibull
?rpareto
?distribution
library(MASS)\
library(MASS)
# Chunk 1
#| code-fold: show
library(tidyverse)
x <- seq(-4, 4, length.out = 1000)
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
theme_bw()
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
x <- seq(-4, 4, length.out = 1000)
dt_two<-function(x){
y <- dt(x,dd)
y[x>-1 & x<2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x>-1 & x<2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x<-1 & x<2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x>-1 & x<2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x<-1 & x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
y <- dnorm(x)
dt_two<-function(x){
y <- dnorm(x)
y[x< -1 & x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x < -1 & x >2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x<-1 & x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x< 1 & x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x< 1 | x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
dt_two<-function(x){
y <- dnorm(x)
y[x< -1 | x>2] <-NA
return(y)
}
x |> (\(.) tibble(x = ., y = dnorm(.)))() |>
ggplot(aes(x, y)) +
geom_line() +
stat_function(fun = dt_two, geom = "area", fill = "green") +
theme_bw()
x <- rnorm(100000, mean = -2, sd = 3)
mean(x)
var(x)
#| code-fold: show
pnorm(6, 4, sqrt(2)) -  pnorm(3, 4, sqrt(2))
mean((X > 3 & X < 6))
mean((x > 3 & x < 6))
#| code-fold: show
x <- rnorm(100000, 4, sqrt(2))
mean((x > 3 & x < 6))
#| code-fold: show
x <- rnorm(1000000, 4, sqrt(2))
mean((x > 3 & x < 6))
?rlogis
?rweibull
rf(10000, 2, 45) |> hist()
x <- runif(100000, 0, 1)
mean((cos(50*x)-sin(50*x))^2)
#| code-fold: show
ff <- function(x){
(cos(50*x)-sin(50*x))^2
}
ff(0.5)
integrate(ff,0,1)
#| code-fold: true
x <- runif(100000, 0, 1)
mean((cos(50*x)-sin(50*x))^2)
x <- runif(10000000, 0, 1)
mean((cos(50*x)-sin(50*x))^2)
integrate(ff,10,15)
#| code-fold: show
x <- runif(1000000, 10, 15)
mean(ff(x)) * 5
#| code-fold: show
x <- runif(1000000, 10, 15)
mean(ff(x)) * 5
#| code-fold: show
x <- runif(10000000, 10, 15)
mean(ff(x)) * 5
x <- rt(1000000)
x <- rt(1000000, df = 1)
f2 <- function(x){
exp(-x^2/2) / dt(x, 1)
}
f2(x)
mean(f2(x))
sqrt(2*pi)
ff <- function(x){
(cos(50*x)-sin(50*x))^2
}
x <- seq(-10, 10)
x <- seq(-10, 10, length.out = 1000)
y <- ff(x)
#| code-fold: show
library(tidyverse)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
x <- seq(-1, 1, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
ff <- function(x){
(cos(50*x)-sin(50*x))^2
}
x <- seq(-0, 1, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
ff <- function(x){
-3*x^4+4*x^3
}
x <- seq(-3, 3, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
x <- seq(-1, 1, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
x <- seq(-1, 2, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line()
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line() + theme_bw()
optim(ff)
ff <- function(x){
-3*x^4+4*x^3
}
optim(-ff)
ff <- function(x){
y <- -3*x^4+4*x^3
}
ff <- function(x){
y <- -3*x^4+4*x^3
return(y)
}
x <- seq(-1, 2, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line() + theme_bw()
ff <- function(x){
y <- -3*x^4+4*x^3
return(y)
}
ff <- function(x){
y <- -3*x^4+4*x^3
return(-y)
}
optim(ff)
?optim
optim(0, ff)
ff <- function(x){
y <- -3*x^4+4*x^3
return(y)
}
x <- seq(-1, 2, length.out = 1000)
y <- ff(x)
tibble(x, y) |>
ggplot(aes(x, y)) +
geom_line() + theme_bw()
ff <- function(x){
y <- -3*x^4+4*x^3
return(-y)
}
optim(0, ff)
optim(0, ff, method = "Brent")
optimize(0, ff)
?optimize
optimize(ff, c(-5,5))
```{r}
x <- runif(1000000, -5,5)
y <- ff(x)
which.min(y)
x[which.min(y)]
x <- rnorm(1000)
y <- 8 -4 * x + rnorm(1000, sd = 0.5)
sse <- function(beta0, beta1, x, y){
sum((y - (beta0 - beta1 * x))^2)
}
sse(8, -4, x, y)
sse(9, -4, x, y)
sapply(1:1000000, \(x) runif(2, -20, 20))
uu <- sapply(1:1000000, \(x) runif(2, -20, 20))
sse <- function(beta, x, y){
sum((y - (beta[1] - beta[2] * x))^2)
}
uu <- sapply(1:1000000, \(x) runif(2, -20, 20))
res <- sapply(uu, sse, x=x, y=x)
res <- sapply(uu, sse, x=x, y=y)
uu <- sapply(1:100000, \(x) runif(2, -20, 20))
res <- sapply(uu, sse, x=x, y=y)
which.min(res)
res
uu
dim(uu)
uu <- sapply(1:100000, \(x) runif(2, -20, 20))
res <- apply(uu, 2, sse, x=x, y=y)
which.min(res)
uu[which.min(res)]
uu[,which.min(res)]
sse <- function(beta, x, y){
sum((y - (beta[1] + beta[2] * x))^2)
}
uu <- sapply(1:1000000, \(x) runif(2, -20, 20))
res <- apply(uu, 2, sse, x=x, y=y)
uu[,which.min(res)]
xx <- seq(-20, 20, length.out = 1000)
yy <- seq(-20, 20, length.out = 1000)
zz <- matrix(nrow = 1000, ncol = 1000)
xx <- seq(-20, 20, length.out = 1000)
yy <- seq(-20, 20, length.out = 1000)
zz <- matrix(nrow = 1000, ncol = 1000)
for (i in seq_along(xx)){
for(ii in seq_along(yy)){
zz[i, ii] <- sse(c(xx[i], yy[ii]), x, y)
}
}
persp(xx, yy, zz)
beta0 <- seq(-20, 20, length.out = 100)
beta1 <- seq(-20, 20, length.out = 100)
zz <- matrix(nrow = 100, ncol = 100)
for (i in seq_along(xx)){
for(ii in seq_along(yy)){
zz[i, ii] <- sse(c(beta0[i], beta1[ii]), x, y)
}
}
persp(xx, yy, zz)
persp(beta0, beta1, zz)
beta0 <- seq(-20, 20, length.out = 100)
beta1 <- seq(-20, 20, length.out = 100)
zz <- matrix(nrow = 100, ncol = 100)
for (i in seq_along(xx)){
for(ii in seq_along(yy)){
zz[i, ii] <- sse(c(beta0[i], beta1[ii]), x, y)
}
}
beta0 <- seq(-20, 20, length.out = 100)
beta1 <- seq(-20, 20, length.out = 100)
zz <- matrix(nrow = 100, ncol = 100)
for (i in seq_along(beta0)){
for(ii in seq_along(beta1)){
zz[i, ii] <- sse(c(beta0[i], beta1[ii]), x, y)
}
}
persp(beta0, beta1, zz)
beta0 <- seq(-20, 20, length.out = 50)
beta1 <- seq(-20, 20, length.out = 50)
zz <- matrix(nrow = 50, ncol = 50)
for (i in seq_along(beta0)){
for(ii in seq_along(beta1)){
zz[i, ii] <- sse(c(beta0[i], beta1[ii]), x, y)
}
}
persp(beta0, beta1, zz)
