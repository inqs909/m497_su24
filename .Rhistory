mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, rate = 10 / mu, shape = 10)
y <- (zi == 0) * p
brm(bf(y ~ x1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, rate = 10 / mu, shape = 10)
y <- (zi == 0) * p
y
brm(bf(y ~ x1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
brm(bf(y ~ x1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, rate = 10 * mu, shape = 10)
y <- (zi == 0) * p
brm(bf(y ~ x1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
exp(0.48)
log(0.48)
exp(-0.84)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, 0.3)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
exp(0.49)
boot::logit(-0.86)
boot::inv.logit(-0.86)
exp(0.68)
exp(0.65)
set.seed(12345)
n <- 1000
minx <- -3.2
maxx <- 3.2
xs <- runif(n, minx, maxx)
meang <- exp(1.2+0.6*xs)
# define a variance
var <- 2.3
# define a dispersion
disp <- 0.8
# generate data defining the mean and the (constant) variance
ys1 <- rgamma(n, shape=(meang^2)/var, scale=var/meang)
glmA1 <- glm(ys1 ~ xs, family=Gamma(link="log"))
summary(glmA1)
newxs <- seq(minx, maxx, length=200)
prdys1 <- predict(glmA1, newdata=data.frame(xs=newxs), type="response")
# parametrization 2
# next parametrization is motivated by the statement of
# https://stats.stackexchange.com/questions/247624/dispersion-parameter-for-gamma-family
# "In R GLM assumes shape to be a constant"
# generate data defining the mean and fixing the shape (= fixing dispersion)
# here induces an overall increase variance with mean
ys2 <- rgamma(n, shape=1/disp, scale=meang*disp)
glmA2 <- glm(ys2 ~ xs,family=Gamma(link="log"))
summary(glmA2)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
zi
mean(zi)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
brm(bf(y ~ 1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
# Chunk 1
library(tidyverse)
library(brms)
theme_set(theme_bw())
# Chunk 2
n <- 10000
x1 <- rnorm(n, mean = 2)
x2 <- rnorm(n, mean = 2.5)
eta <- boot::inv.logit(-1.85 + 1.1 * x1)
zi <- rbinom(n, size = 1, prob = eta)
mu <- exp(4 - 2 * x2)
p <- rpois(n, mu)
y <- (zi == 0) * p
brm(bf(y ~ x2,
zi ~ x1),
data = tibble(y, x1, x2),
family = zero_inflated_poisson(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, shape = 2)
p <- rgamma(1000, shape = 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
exp(0.5)
exp(-0.5)
exp(-0.75)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, exp(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ x1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, exp(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, scale = 3 / 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, exp(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = 2, scale = log(3) / 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
exp(1.1)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, exp(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1))
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
boot::inv.logit(-0.75)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, boot::inv.logit(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) * 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, boot::inv.logit(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) / 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, boot::inv.logit(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) / 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, boot::inv.logit(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) / 3, scale = 3)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
# eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, boot::inv.logit(-0.75))
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) * 3, scale = 3)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) / 3, scale = 1 / 3)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ 1),
data = tibble(y, x1),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = exp(1.1) / 3, scale = 1 / 3)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu)
y <- (zi == 0) * p
brm(bf(y ~ 1,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, scale = mu / 2, shape = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu / 2, rate = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu / 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu * 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu * 2, scale = 1 / 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
x <- rnorm(10000, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(1000, shape = mu, scale = 1 / 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, scale  = mu * 2, scale = 1 / 2)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape  = mu / 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape  = mu, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape  = mu * 2, scale = 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape = 1 / 2, scale = 2 * mu)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape = 1 / 0.5, scale = 0.5 * mu)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape = 2, scale = mu / 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
install.packages("extraDistr")
library(extraDistr)
mu <- exp(0.75 + 1.3 * x)
mu
n <- 10000
x <- rnorm(n)
eta <- boot::inv.logit(0.75 + 1.3 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rtpois(n, lambda = mu, a = 0)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_poisson(),
cores = 4)
n <- 10000
x <- rnorm(n)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rtpois(n, lambda = mu, a = 0)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_poisson(),
cores = 4)
n <- 10000
x <- rnorm(n, mean  = -0.25)
eta <- boot::inv.logit(1.1 + 3.1 * x)
zi <- rbinom(n, 1, eta)
mu <- exp(0.75 + 1.3 * x)
p <- rgamma(n, shape = 2, scale = mu / 2)
y <- (zi == 0) * p
brm(bf(y ~ x,
hu ~ x),
data = tibble(y, x),
family = hurdle_gamma(),
cores = 4)
