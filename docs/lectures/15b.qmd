---
title: |
  Unsupervised \
  Machine Learning
format:
  revealjs:
    scrollable: true
    include-in-header: "math_commands.html"
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    incremental: false 
    chalkboard:
      src: chalkboard.json
      storage: chalkboard_pres
      theme: whiteboard
      chalk-width: 4
knitr:
  opts_chunk: 
    echo: true
    eval: true
    message: false
    warnings: false
    comment: "#>" 
    
revealjs-plugins:
  - pointer
  - verticator
  
filters: 
  - reveal-header
  - code-fullscreen
  - reveal-auto-agenda

editor: source
---

# Unsupervised Machine Learning

## Supervised Machine Learning 

$$
\boldsymbol X = (X_1, X_2, \cdots, X_n)\mrTr
$$
where

$$
X_i = (x_{i1}, x_{i2}, \cdots, x_{in})
$$
and

$$
\boldsymbol Y = (Y_1, Y_2, \cdots, Y_n)\mrTr
$$

## Unsupervised Machine Learning

Given:

$$
\boldsymbol X = (X_1, X_2, \cdots, X_n)\mrTr
$$
where

$$
X_i = (x_{i1}, x_{i2}, \cdots, x_{in})
$$


Group the data to $K$ categories.

## Unsupervised Machine Learning

We can naturally group data with the following techniques:

-   Principal Component Analysis
-   K-Means Clustering
-   Hierarchical Clustering
-   Mixture Models

## Principal Componenet Analysis

Principal Component Analysis (PCA) is a dimensionality reduction technique used to simplify complex datasets while retaining as much of the original variability as possible. It accomplishes this by transforming the original variables into a new set of orthogonal variables called principal components. PCA is widely used in data analysis, visualization, and machine learning for tasks such as feature extraction, data compression, and noise reduction.


## K-Means Clustering

K-Means clustering is one of the most popular unsupervised machine learning algorithms used for partitioning a dataset into a predetermined number of clusters. It aims to group similar data points together and discover underlying patterns or structures within the data. K-Means is simple, efficient, and widely applicable in various domains, including data analysis, image processing, and customer segmentation.

## Hierarchical Clustering

Hierarchical clustering is a method used to cluster data into a hierarchy of clusters. Unlike K-Means, which requires specifying the number of clusters upfront, hierarchical clustering builds a tree-like structure (dendrogram) that reflects the relationships between data points at different levels of granularity. Hierarchical clustering can be divided into two main types: agglomerative and divisive.

## Mixture Models

Mixture models for clustering, often referred to as Gaussian Mixture Models (GMMs), are probabilistic models used to describe the distribution of data as a mixture of multiple Gaussian distributions. Unlike K-Means or hierarchical clustering, which assign data points to discrete clusters, GMMs represent each cluster as a probability distribution over the entire feature space. This allows for more flexible modeling of complex data distributions and enables soft assignment of data points to clusters based on their probabilities.

# Topic Modeling with Talor Swift

## Topic Modelling

Topic modeling is a statistical technique used to identify latent topics or themes within a collection of text documents. It aims to uncover the underlying structure of the text data by automatically clustering documents into topics based on the distribution of words across documents. Topic modeling is widely used in natural language processing (NLP) and text mining for tasks such as document clustering, information retrieval, and content analysis.

## Latent Dirichlet Allocation

Latent Dirichlet Allocation (LDA) is a probabilistic model used for topic modeling in natural language processing (NLP). LDA assumes that each document in the corpus is generated by a probabilistic process involving a mixture of topics. It posits that documents exhibit multiple topics, and each word within a document is associated with one of these topics.

## Structural Topic Model

The Structural Topic Model (STM) is an extension of the Latent Dirichlet Allocation (LDA) model that incorporates document metadata and covariates to capture the structural aspects of text data. Unlike LDA, which assumes that topics are generated independently of document metadata, STM allows for the incorporation of metadata or covariates associated with each document. Covariates could include document-level characteristics such as authorship, publication year, geographic location, or any other relevant metadata.

## Text Mining Resource

[![](https://www.tidytextmining.com/images/cover.png)](https://www.tidytextmining.com/)

## R Packages

```{r}
library(tidyverse)
library(taylor)
library(tidytext)
library(stm)
```

## Data Cleaning

```{r}
tidy_taylor <-
  taylor_album_songs |>
  unnest(lyrics) |> 
  unnest_tokens(word, lyric)


tidy_taylor |> 
  anti_join(get_stopwords()) |> 
  count(track_name, word, sort = TRUE) |> 
  head(4)


lyrics_sparse <-
  tidy_taylor |> 
  count(track_name, word) |> 
  filter(n > 3) |> 
  cast_sparse(track_name, word, n)

```


## Topic Modelling

```{r}

set.seed(123)
topic_model <- stm(lyrics_sparse, K = 8, verbose = FALSE)
```

## Summary



```{r}
summary(topic_model)

```

## Plot

```{r}
#| code-fold: true
lyrics_gamma <- tidy(
  topic_model, 
  matrix = "gamma",
  document_names = rownames(lyrics_sparse)
) 

lyrics_gamma |> 
  left_join(
    taylor_album_songs |> 
      select(album_name, document = track_name) |> 
      mutate(album_name = fct_inorder(album_name))
  ) |> 
  mutate(topic = factor(topic)) |> 
  ggplot(aes(gamma, topic, fill = topic)) +
  geom_boxplot(alpha = 0.7, show.legend = FALSE) +
  facet_wrap(vars(album_name)) +
  labs(x = expression(gamma))

```

## Significant Effects

```{r}
#| code-fold: true
set.seed(909)

effects <-
  estimateEffect(
    1:8 ~ album_name,
    topic_model,
    taylor_album_songs |> distinct(track_name, album_name) |> arrange(track_name)
  )


tidy(effects) |>  
  filter(term != "(Intercept)", p.value < 0.1) |> 
  select(topic, term, p.value)
  
```


## Topic 3

```{r}

tidy(topic_model, matrix = "lift") |> 
  filter(topic == 3)

```


# The Missing Statistics Semester

## The Missing Statistics Sememster

Here is a list of resources to expand on topics not covered in your education.

Adapted from <https://missing.csail.mit.edu/>

## Introduction to Statistics

-   [Traditional Statistics](https://bookdown.org/lgpcappiello/introstats/introduction-to-hypothesis-testing.html#p-value-approach-to-hypothesis-testing)
-   [Modern Basic Statistics](https://openintro-ims.netlify.app/)
-   [Statistical Modeling](https://statistical-modeling.netlify.app/)
-   [Statistical Thinking](https://dtkaplan.github.io/Lessons-in-statistical-thinking/)
-   [Stats for People Who Hate Stats](https://edge.sagepub.com/salkindfrey7e)

## Statistical Computing

-   Computational Statistics (2009, Springer; Download from CSUCI Library)
-   Basic Elements of Computational Statistics (2017, Springer; Download from CSUCI)
-   Optimization (2013, Springer; Download from CSUCI)

## Regression

-   [Beyond Linear Regression](https://bookdown.org/roback/bookdown-BeyondMLR/)
-   [Regression Modelling Strategies](https://hbiostat.org/rmsc/) (Download from CSUCI Library)
-   [Linear Models](https://bookdown.org/pingapang9/linear_models_bookdown/)
-   Generalized Linear Models With Examples in R (Download from CSUCI Library)
-   Linear and Generalized Linear Mixed Models and Their Applications (2nd Edition) (Download from CSUCI Library)
-   Vector Generalized Linear and Additive Models; Yee (Download from CSUCI Library)

## Other Statistics Resources

-   [StatLect](https://www.statlect.com/)
-   [Causal Inference](https://www.r-causal.org/)
-   [Linear Algebra](https://shainarace.github.io/LinearAlgebra/index.html)


## R Programming

-   [Basic R](https://r4ds.hadley.nz/)
-   [Basic R](https://jjallaire.github.io/hopr/)
-   [Advanced R](https://adv-r.hadley.nz/)
-   [Efficient R](https://csgillespie.github.io/efficientR/)
-   [R Bootcamp](https://r-bootcamp.netlify.app/)
-   [Deep R](https://deepr.gagolewski.com/index.html)
-   [Rcpp](https://www.rcpp.org/)
-   [Rcpp 4 Everyone](https://teuder.github.io/rcpp4everyone_en/)
-   [Rcpp Armadillo](http://dirk.eddelbuettel.com/code/rcpp.armadillo.html)

## Python Programming

-   [Basic Python](https://wesmckinney.com/book/)
-   [Anaconda](https://docs.anaconda.com/free/anaconda/install/)
-   [Learn Python](https://www.learnpython.org/)
-   [Python Data Science](https://jakevdp.github.io/PythonDataScienceHandbook/)
-   [Reticulate](https://rstudio.github.io/reticulate/)

## SQL

-   [SQL for Data Science](https://mode.com/sql-tutorial/introduction-to-sql)
-   [Khan Academy](https://www.khanacademy.org/computing/computer-programming/sql)
-   [SQLBolt](https://sqlbolt.com/)
-   [SQLZoo](https://sqlzoo.net/wiki/SQL_Tutorial)

## Shell-Terminal

-   [Missing Semester](https://missing.csail.mit.edu/2020/shell-tools/)
-   [Shell](https://swcarpentry.github.io/shell-novice/)
-   [Explain Shell](https://explainshell.com/)
-   [Vim Adventures](https://vim-adventures.com/)
-   [Neovim](https://neovim.io/)
-   [tmux](https://github.com/tmux/tmux/wiki)
-   [HPCC Manuals](https://hpcc.ucr.edu/manuals/)

## Git

-   [Missing Semester](https://missing.csail.mit.edu/2020/version-control/)
-   [Happy Git](https://happygitwithr.com/)                              
-   [Pro Git](https://git-scm.com/book/en/v2)                            
-   [Oh S\*\*\*, Git!?!](https://ohshitgit.com/)                         
-   [Git in Simple Words](https://xosh.org/explain-git-in-simple-words/) 

## Markdown

-   [R Mardown](https://bookdown.org/yihui/rmarkdown/)
-   [Quarto](https://quarto.org/)
-   [LaTeX](https://tobi.oetiker.ch/lshort/lshort.pdf)
-   [LaTeX for Beginners](https://www.colorado.edu/aps/sites/default/files/attached-files/latex_primer.pdf)
-   [Typst](https://typst.app/)

## Dashboards

-   [Shiny](https://shiny.posit.co/)
-   [Quarto Dashboards](https://quarto.org/docs/dashboards/)
-   [Tableau](https://www.tableau.com/learn/training)
-   [Power BI](https://learn.microsoft.com/en-us/training/powerplatform/power-bi)


## Other Programming

-   [Cpp](https://www.learncpp.com/)
-   [Cpp Armadillo](https://arma.sourceforge.net/)
-   [Julia Data Science](https://juliadatascience.io/)
-   [ArcGIS](https://learn.arcgis.com/en/gallery/)
-   [SAS](https://www.sas.com/en_us/home.html)
-   [Stata](https://www.stata.com/)
-   [SPSS](https://www.ibm.com/spss)
-   [VBA](https://learn.microsoft.com/en-us/office/vba/library-reference/concepts/getting-started-with-vba-in-office)
-   [JMP](https://www.jmp.com/en_us/home.html)


