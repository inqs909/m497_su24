{
  "hash": "de22f01a38fa71d8ee0e46eee4e9ef4b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Random Variable Generation\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nengine: knitr\nknitr:\n  opts_chunk: \n    code-fold: true\n    echo: true\n    eval: true\n    comment: \"#>\" \n\n\nfilters: \n  - reveal-header\n  - reveal-auto-agenda\n  - code-fullscreen\n  - webr\n\nwebr: \n  show-startup-message: true\n  packages: ['ggplot2', 'dplyr', 'stringr']\n---\n\n\n# Random Variables\n\n## Random Process\n\nA random process is act of observing an outcome of an event that is unpredictable.\n\n::: fragment\nExamples:\n-   Flipping a coin\n-   Rolling a die\n:::\n\n\n## Random Variable\n\nA random variable connects the outcomes observed from a random process to a probability space.\n\n## Flipping a Coin\n| | | |\n|:-|:-|:-|\n|Outcome | Head | Tails |\n|Probability | 0.5 | 0.5 |\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(patchwork)\nx <- sample(c(\"H\", \"T\"), 5000, replace = T)\nx |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\ntheme_bw()\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Rolling a Die\n\n| | | | | | | |\n|:-|:-|:-|:-|:-|:-|:-|\n|Outcome | 1 | 2 | 3 | 4 | 5 | 6 |\n|Probability | 1/6 | 1/6 | 1/6 | 1/6 | 1/6 | 1/6 |\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# library(tidyverse)\nx <- sample(1:6, 50000, replace = T)\nx |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\ntheme_bw()\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Discrete Random Variables\n\nA random variable is considered to be discrete if the outcome are only whole numbers (integers).\n\n## PMF\n\nThe probability mass function of discrete variable can be represented by a formula, table, or a graph. The Probability of a random variable Y can be expressed as $P(Y=y)$ for all values of $y$.\n\n## Rolling a Die\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nx <- sample(1:6, 50000, replace = T)\nx |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\ntheme_bw()\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## CDF\n\nThe cumulative distribution function provides the $P(Y\\leq y)$ for a random variable $Y$.\n\n## Expected Value\n\nThe *expected value* is the value we expect when we randomly sample from population that follows a specific distribution. The expected value of Y is\n\n$$\nE(Y)=\\sum_y yP(y)\n$$\n\n## Variance\n\nThe *variance* is the expected squared difference between the random variable and expected value.\n\n$$\nVar(Y)=\\sum_y\\{y-E(Y)\\}^2P(y)\n$$\n\n$$\nVar(Y) = E(X^2) - E(X)^2\n$$\n\n## Known Distributions\n\n| Distribution      | Parameter(s)      | PMF $P(Y=y)$                          |\n|------------------|------------------|------------------------------------|\n| Bernoulli         | $p$               | $p$                                   |\n| Binomial          | $n$ and $p$       | $(^n_y)p^y(1-p)^{n-p}$                |\n| Geometric         | $p$               | $(1-p)^{y-1}p$                        |\n| Negative Binomial | $r$ and $p$       | $(^{y-1}_{r-1})p^{r-1}(1-p)^{y-r}$    |\n| Hypergeometric    | $N$, $n$, and $r$ | $\\frac{(^r_y)(^{N-r}_{n-y})}{(^N_n)}$ |\n| Poisson           | $\\lambda$         | $\\frac{\\lambda^y}{y!} e^{-\\lambda}$   |\n\n\n## Binomial Distribution\n\nAn experiment is said to follow a binomial distribution if\n\n1.  Fixed $n$\n2.  Each trial has 2 outcomes\n3.  The probability of success is a constant $p$\n4.  The trials are independent of each\n\n::: fragment\n$P(X=x)=(^n_x)p^x(1-p)^{n-x}$\n:::\n\n::: fragment\n$X$ can be any value between 0 to n\n:::\n\n::: fragment\n$X \\sim Bin(n,p)$\n:::\n\n## Bernoulli Distribution (n = 1, p = 0.1; Biased Coin Flip)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.1\nx <- rbinom(50000, 1, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:1 |> pbinom(1, p) |> tibble(x = 0:1, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## Distribution (n = 30, p = 0.1)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.1\nx <- rbinom(50000, 30, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nxlim(c(0,30)) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:30 |> pbinom(30, p) |> tibble(x = 0:30, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Distribution (n = 30, p = 0.5)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.5\nx <- rbinom(50000, 30, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nxlim(c(0,30)) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:30 |> pbinom(30, p) |> tibble(x = 0:30, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Distribution (n = 30, p = 0.85)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.85\nx <- rbinom(50000, 30, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nxlim(c(0,30)) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:30 |> pbinom(30, p) |> tibble(x = 0:30, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Expectations\n\n$$\nE(X) =  np\n$$\n\n$$\nVar(X) = np(1-p)\n$$\n\n## Poisson Distribution\n\nThe poisson distribution describes an experiment that measures that occurrence of an event at specific point and/or time period.\n\n::: fragment\n$P(X=x)=\\frac{\\lambda^x}{x!}e^{-\\lambda}$\n:::\n\n::: fragment\n$X$ can take any value from 0 to $\\infty$\n:::\n\n::: fragment\n$X \\sim Pois(\\lambda)$\n:::\n\n\n## Distribution ($\\lambda$ = 3.5)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 3.5\nx <- rpois(50000, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:max(x) |> ppois(p) |> tibble(x = 0:max(x), y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Distribution ($\\lambda$ = 34.5)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 34.5\nx <- rpois(50000, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) + \nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:max(x) |> ppois(p) |> tibble(x = 0:max(x), y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Expectations\n\n$$\nE(X) = \\lambda\n$$\n\n$$\nVar(X) = \\lambda\n$$\n\n\n## Negative Binomial\n\nThe negative binomial distribution is a discrete probability distribution that models the number of trials required to achieve a specified number of successes in a sequence of independent and identically distributed Bernoulli trials. \n\n$$\nP(X = k) = \\binom{k + r - 1}{r - 1} p^r (1 - p)^k\n$$\n\n::: fragment\n$X$ can take the values from 0 to $\\infty$\n:::\n\n::: fragment\n$X\\sim NB(p, r)$\n:::\n\n## Expectations\n\n$$\nE(X) = \\frac{r (1 - p)}{p}\n$$\n\n$$\n\\text{Var}(X) = \\frac{r (1 - p)}{p^2}\n$$\n\n## Distribution (r = 11, p = 0.1)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.1\nx <- rnbinom(50000, 11, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:max(x) |> pnbinom(11, p) |> tibble(x = 0:max(x), y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Distribution (r = 11, p = 0.45)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.45\nx <- rnbinom(50000, 11, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:max(x) |> pnbinom(11, p) |> tibble(x = 0:max(x), y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Distribution (r = 11, p = 0.63)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.63\nx <- rnbinom(50000, 11, p)\np1 <- x |> tibble() |> \nggplot(aes(x)) +\ngeom_bar(aes(y = (..count..)/sum(..count..))) +\nylab(\"Probability\") +\nggtitle(\"PMF\") +\ntheme_bw()\np2 <- 0:max(x) |> pnbinom(11, p) |> tibble(x = 0:max(x), y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Continuous Random Variables\n\nA random variable $X$ is considered continuous if the $P(X=x)$ does not exist.\n\n## CDF\n\nThe cumulative distribution function of $X$ provides the $P(X\\leq x)$, denoted by $F(x)$, for the domain of $X$.\n\nProperties of the CDF of $X$:\n\n1.  $F(-\\infty)\\equiv \\lim_{y\\rightarrow -\\infty}F(y)=0$\n2.  $F(\\infty)\\equiv \\lim_{y\\rightarrow \\infty}F(y)=1$\n3.  $F(x)$ is a nondecreaseing function\n\n## PDF\n\nThe probability density function of the random variable $X$ is given by\n\n$$\nf(x)=\\frac{dF(x)}{d(x)}=F^\\prime(x)\n$$\n\nwherever the derivative exists.\n\nProperties of pdfs:\n\n1.  $f(x)\\geq 0$\n2.  $\\int^\\infty_{-\\infty}f(x)dx=1$\n3.  $P(a\\leq X\\leq b) = P(a<X<b)=\\int^b_af(x)dx$\n\n## Expected Value\n\nThe expected value for a continuous distribution is defined as\n\n$$\nE(X)=\\int x f(x)dx\n$$\n\nThe expectation of a function $g(X)$ is defined as\n\n$$\nE\\{g(X)\\}=\\int g(x)f(x)dx\n$$\n\n## Variance\n\nThe variance of continuous variable is defined as\n\n$$\nVar(X) =  E[\\{X-E(X)\\}^2] = \\int \\{X-E(X)\\}^2 f(x)dx \n$$\n\n\n\n## Uniform Distribution\n\nA random variable is said to follow uniform distribution if the density function is constant between two parameters.\n\n::: fragment\n$$\nf(x) = \\left\\{\\begin{array}{cc}\n \\frac{1}{b-a} & a \\leq x \\leq b\\\\\n0 & \\mathrm{elsewhere}\n\\end{array}\\right.\n$$\n:::\n\n::: fragment\n$X$ can take any value between $a$ and $b$\n:::\n\n::: fragment\n$X \\sim U(a,b)$\n:::\n\n\n\n## Distribution (a = 4, b = 25)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\na <- 4\nb <- 25\nx <- seq(a, b, length.out = 1000)\np1 <- dunif(x, a, b) |> tibble(x = x, y = _) |> \nggplot(aes(x, y)) +\ngeom_line() +\nylab(\"Density\") +\nggtitle(\"PDF\") +\ntheme_bw()\np2 <- punif(x, a, b) |> tibble(x = x, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n## Distribution (a = 0, b = 1)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\na <- 0\nb <- 1\nx <- seq(a, b, length.out = 1000)\np1 <- dunif(x, a, b) |> tibble(x = x, y = _) |> \nggplot(aes(x, y)) +\ngeom_line() +\nylab(\"Density\") +\nggtitle(\"PDF\") +\ntheme_bw()\np2 <- punif(x, a, b) |> tibble(x = x, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Expectations\n\n$$\nE(X) = \\frac{a+b}{2}\n$$\n\n$$\nVar(X) = \\frac{1}{12}(b-a)^2\n$$\n\n\n\n## Normal Distribution\n\nA random variable is said to follow a normal distribution if the the frequency of occurrence follow a Gaussian function.\n\n$$\nf(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp\\left\\{-\\frac{(x-\\mu)^2}{2\\sigma^2}\\right\\}\n$$\n\n::: fragment\n$X$ can take any value between $-\\infty$ and $\\infty$\n:::\n\n::: fragment\n$X\\sim N(\\mu, \\sigma^2)$\n:::\n\n## Distribution ($\\mu$ = 34, $\\sigma^2$ = 5)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\na <- 25\nb <- 45\nx <- seq(a, b, length.out = 1000)\np1 <- dnorm(x, 34, sqrt(5)) |> tibble(x = x, y = _) |> \nggplot(aes(x, y)) +\ngeom_line() +\nylab(\"Density\") +\nggtitle(\"PDF\") +\ntheme_bw()\np2 <- pnorm(x, 34, sqrt(5)) |> tibble(x = x, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## Distribution ($\\mu$ = -8, $\\sigma^2$ = 10)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\na <- -20\nb <- 4\nx <- seq(a, b, length.out = 1000)\np1 <- dnorm(x, -8, sqrt(10)) |> tibble(x = x, y = _) |> \nggplot(aes(x, y)) +\ngeom_line() +\nylab(\"Density\") +\nggtitle(\"PDF\") +\ntheme_bw()\np2 <- pnorm(x, -8, sqrt(10)) |> tibble(x = x, y = _) |> \nggplot(aes(x,y)) +\ngeom_line() +\ntheme_bw() +\nggtitle(\"CDF\") +\nylab(paste0(\"P(X\",\"\\u2264\",\" x)\"))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](3_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Expectations \n\n$$\nE(X) = \\mu\n$$\n\n$$\nVar(X) = \\sigma^2\n$$\n\n## Gamma Distribution\n\nA gamma random variable is characterized by the gamma distribution, used to model waiting times or the time until an event occurs a certain number of times.\n\n$$\nf(x; \\alpha, \\beta) = \\frac{x^{\\alpha - 1} e^{-x/\\beta}}{\\beta^\\alpha \\Gamma(\\alpha)}\n$$\n\n$$\n\\Gamma(\\alpha) = \\int_0^\\infty t^{\\alpha - 1} e^{-t} \\, dt\n$$\n\n::: fragment\n$X$ can take any value between 0 and $\\infty$\n:::\n\n::: fragment\n$X\\sim Gamma(\\alpha,\\beta)$\n:::\n\n## Expectations\n\n$$\nE(X) = \\alpha \\beta\n$$\n\n$$\n\\text{Var}(X) = \\alpha \\beta^2\n$$\n\n## Beta Distribution\n\nThe beta distribution is often used to model random variables that represent proportions or probabilities.\n\n$$\nf(x; \\alpha, \\beta) = \\frac{x^{\\alpha - 1} (1 - x)^{\\beta - 1}}{B(\\alpha, \\beta)}\n$$\n\n$$\nB(\\alpha, \\beta) = \\int_0^1 t^{\\alpha - 1} (1 - t)^{\\beta - 1} \\, dt\n$$\n\n::: fragment\n$X$ can take a value between 0 and 1\n:::\n\n::: fragment\n$X\\sim Beta(\\alpha,\\beta)$\n:::\n\n## Expectations\n\n$$\nE(X) = \\frac{\\alpha}{\\alpha + \\beta}\n$$\n\n$$\n\\text{Var}(X) = \\frac{\\alpha \\beta}{(\\alpha + \\beta)^2 (\\alpha + \\beta + 1)}\n$$\n\n# Random Number Generator History\n\n## Generating Random Numbers\n\n![](https://content.presentermedia.com/files/clipart/00002000/2605/pair_of_white_dice_rolled_800_wht.jpg)\n\n## Generating Random Numbers\n\n![](https://www.pbs.org/newshour/app/uploads/2015/03/159615168-1024x768.jpg)\n\n## Generating Random Numbers\n\n![](https://cdn.mos.cms.futurecdn.net/gGpxdnJ7x3dBMrgSgKybQU-1200-80.jpg)\n\n## Generating Random Numbers\n\n![](https://mathbitsnotebook.com/Algebra2/Statistics/random%20table.png)\n\n## Generating Random Numbers\n\n![](https://cdn.britannica.com/35/18435-050-C6ECB9CB/Monte-Carlo-casino.jpg)\n\n## Psuedo Random Numbers\n\n## Modulo 2 Linear Generators\n\n## Mersenne Twister\n\n# Random Variable Generations",
    "supporting": [
      "3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}