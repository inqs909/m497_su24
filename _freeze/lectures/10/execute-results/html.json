{
  "hash": "77144653a6b551da279d88a64c2e8b95",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulation Studies\"\nsubtitle: \"Mixed Effects Models\"\nformat:\n  revealjs:\n    include-in-header: \"math_commands.html\"\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nengine: knitr\nknitr:\n  opts_chunk: \n    code-fold: show\n    echo: true\n    eval: false\n    comment: \"#>\" \nfilters: \n  - reveal-header\n  - reveal-auto-agenda\n  - code-fullscreen\n  - webr\nwebr: \n  show-startup-message: true\n  packages: ['ggplot2', 'dplyr', 'stringr']\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n## R Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\nlibrary(mvtnorm)\nlibrary(brms)\ntheme_set(theme_bw())\n```\n:::\n\n\n\n# Longitudinal Studies\n\n## Longitudinal Studies\n\nLongitudinal studies are designed to determine whether there are time effects on an outcome of interest.\n\n::: fragment\nThe data typically recorded on an experimental unit multiple times.\n:::\n\n::: fragment\nThe repeated measurements are considered correlated due to sharing the experimental unit.\n:::\n\n## Correlated Outcomes\n\nCorrelated outcomes causes the standard error of the estimated to be inflated.\n\n::: fragment\nTherefore, inferential procedures are unreliable.\n:::\n\n## Data Structure\n\n$$\nY_{i} = (Y_{i1}, Y_{i2}, \\ldots, Y_{in_i})\n$$\n\n## Modelling\n\n-   Generalized Least Squares\n-   Generalized Estimating Equations\n-   Mixed Effects Models\n\n# Linear Mixed-Effects Models\n\n## Linear Models\n\n$$\nY_{ij} = \\beta_0 + \\beta_1X_{ij} + \\varepsilon_{ij}\n$$\n\n## Random Effects Model\n\n$$\nY_{ij} = b_{0i} + b_{1i}X_{ij} + \\varepsilon_i\n$$\n\n## Mixed Effects Model\n\n$$\nY_{ij} = \\beta_0 + \\beta_1X_{ij} + b_{0i} + b_{1i}X_{ij} + \\varepsilon_{ij}\n$$\n\n-   $b_{i0}\\sim N(0, \\sigma^2_{b0})$\n-   $b_{i1}\\sim N(0, \\sigma^2_{b1})$\n-   $\\varepsilon_{ij} \\sim N(0, \\sigma^2_\\varepsilon)$\n-   $b_i \\perp \\varepsilon_{ij}$\n\n\n## Simulation Study\n\n-   500 Units (patients)\n-   For each unit, 5 repeated measurements\n-   $Y_{ij} = 4 + 1.9 X_{i1} + 2.3 t_j + b_{i0} + b_{i1} t_j + \\varepsilon_{ij}$\n-   $\\varepsilon_{ij}\\sim N(0, 1.1^2)$\n-   $b_{i0}\\sim N(0, 1.8^2)$\n-   $b_{i1}\\sim N(0,1.5^2)$\n\n## Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ndf <- tibble()\nbeta0 <- 4\nbeta1 <- 1.9\nbeta2 <- 2.3\nt <- 0:4\n\nn <- 500\nfor(i in 1:n){\n  b0 <- rnorm(1, sd = 1.8)\n  b1 <- rnorm(1, sd = 1.5)\n  x.vec <- rmvnorm(1, sigma = diag(rep(1, 5))) |> as.vector()\n  y <- beta0 + beta1 * t + beta2 * x.vec + b0 + b1 * t  + rnorm(5, sd = 1.1) |> as.vector()\n  df <- bind_rows(df,\n                  tibble(y = y, x = x.vec, t = t, id = i))\n\n}\n```\n:::\n\n\n\n## Bayesian Analysis in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nbrm(y ~ x + t + (t|id),\n    data = df,\n    family = gaussian(),\n    cores = 4)\n```\n:::\n\n\n\n\n\n# Generalized Linear Mixed-Effects Models\n\n## GLMM\n\n$$\ng\\{E(Y_{ij})\\} = \\beta_0 + \\beta_1X_{ij} + b_{0i} + b_{1i}X_{ij}\n$$\n\n## Simulation Study\n\n-   500 Units (patients)\n-   For each unit, 5 repeated measurements\n-   $g\\{E(Y_{ij})\\} = 2 - 1.56 X_{i1} - 1.3 t_j + b_{i0} + b_{i1} t_j$\n-   $Y_{ij} \\sim Bern(p_{ij})$\n-   $b_{i0}\\sim N(0, 1.8^2)$\n-   $b_{i1}\\sim N(0,1.5^2)$\n\n\n## Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ndf <- tibble()\nbeta0 <- 2\nbeta1 <- -1.56\nbeta2 <- -1.3\nt <- 0:4\n\nn <- 500\nfor(i in 1:n){\n  b0 <- rnorm(1, sd = 1.8)\n  b1 <- rnorm(1, sd = 1.5)\n  x.vec <- rmvnorm(1, sigma = diag(rep(1, 5))) |> as.vector()\n  mu <- boot::inv.logit(beta0 + beta1 * t + beta2 * x.vec + b0 + b1 * t)\n  y <- rbinom(5, 1, mu)\n  df <- bind_rows(df,\n                  tibble(y = y, x = x.vec, t = t, id = i))\n\n}\n```\n:::\n\n\n\n## Bayesian Analysis in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nbrm(y ~ t + x + (t|id),\n    data = df,\n    family = bernoulli(),\n    cores = 4)\n```\n:::\n\n\n\n# Multilevel Models\n\n## Multilevel Models\n\nMultilevel models are utilized to account for correlation among multiple grouping settings.\n\n## Longitudinal Biomedical Study\n\nMultilevel Models can be used to model patients in a facility, and repeated measurements in a patient.\n\n::: fragment\nThe first level is the facility. There are a set number of facilities in a study.\n:::\n\n::: fragment\nThe next level are the patients within a facility. Additionally, each patient has a set of observations.\n:::\n\n::: fragment\nIt is thought that the patients within the facility share a number of characteristics. This will bias the standard errors in a model if not accounted for.\n:::\n\n## Data Structure\n\n-   $Y_i=(Y_{i1}, Y_{i2}, \\ldots, Y_{in_{i}}) ^\\mathrm T$: A vector containing all the outcomes in a facility.\n-   $Y_{ij}=(Y_{ij1}, Y_{ij2}, \\ldots, Y_{ijn_{ij}}) ^\\mathrm T$ A vector containing all the the outcomes in a patient.\n-   $Y_{ijk}$: An individual outcome.\n\n## Model\n\n$$\nY_{ijk} = \\beta_0 + \\beta_1 X_{ij} + \\beta_2 t_{ijk} + b_i + b_{ij} + \\varepsilon_{ijk}\n$$\n\n## Simulation Study\n\n-   500 Facilities\n-   For each facility, there are 30 patients\n-   For each patient there are 5 repeated measurements\n-   $Y_{ijk} = 2 - 1.56 X_{i1} - 1.3 t_j + b_{ij} + b_{i} + \\varepsilon_{ijk}$\n-   $\\varepsilon_{ijk} \\sim N(0, 4)$\n-   $b_{i}\\sim N(0, .6^2)$\n-   $b_{ij}\\sim N(0,1.1^2)$\n\n## Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ndf <- tibble()\nbeta0 <- 2\nbeta1 <- -1.56\nbeta2 <- -1.3\nt <- 0:4\n\nn <- 25\nnn <- 30\nj <- 1\n\nfor(i in 1:n){\n  xi <- rnorm(1, sd = .6)\n  for(ii in 1:nn){\n    b0 <- rnorm(1, sd = 1.1)\n    x.vec <- rmvnorm(1, sigma = diag(rep(1, 5))) |> as.vector()\n    y <- beta0 + beta1 * t + beta2 * x.vec + \n                            b0 + xi + rnorm(5, sd = 2) |> \n      as.vector()\n    df <- bind_rows(df,\n                    tibble(y = y, x = x.vec, t = t, \n                           id = i, id2 = ii, jid = j))\n    j <- j + 1\n  }\n}\n```\n:::\n\n\n\n## Bayesian Analysis in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nbrm(y ~ x + t + (1|jid) + (1|id),\n    data = df,\n    family = gaussian(),\n    iter = 20000,\n    cores = 4)\n```\n:::\n\n\n\n## Frog Study\n\n![](https://nas.er.usgs.gov/XIMAGESERVERX/2019/20190408152618.jpg)\n\n![](https://calphotos.berkeley.edu/imgs/512x768/0000_0000/0516/0079.jpeg)\n\n![](https://reptilesmagazine.com/wp-content/uploads/data-import/420237ac/golden-poison-dart-frog-shutterstock_521542363.jpg)\n\n\n## Frog Species\n\nTwo of the frog species seems similar to each other.\n\n::: fragment\nCould they be evolutionarily related to each other?\n:::\n\n::: fragment\nWe need to account the relatedness using random effects.\n:::\n\n## Random Effects on Species \n\n$$\n\\left(\\begin{array}{c}\nS_1\\\\\nS_2\\\\\nS_3\n\\end{array}\\right) \\sim\n\nN\\left\\{\\left(\\begin{array}{c}\n0\\\\\n0\\\\\n0\n\\end{array}\\right), \\left(\\begin{array}{c}\n\\sigma_{1}^2 & \\sigma_{12} & \\sigma_{13}\\\\\n\\sigma_{12} & \\sigma_{2}^2 & \\sigma_{23}\\\\\n\\sigma_{13} & \\sigma_{23} & \\sigma_{3}^2\n\\end{array}\\right) \n\\right\\}\n$$\n\n## Model\n\n$$\nY_{ijk} = \\beta_0 + \\beta_1 X_{i1} + \\beta_2 t_j + b_{ij} + b_{i} + b_{sp(ij)} + \\varepsilon_{ijk}\n$$\n\n\n## Simulation Study\n\n-   15 Housing Unit\n-   For each Housing Unit, there are 15 frogs\n-   For each Housing Unit, there are 5 frogs of each species \n-   For each frog, there are 4 repeated measurements\n-   $Y_{ijk} = 2 - 1.56 X_{i1} - 1.3 t_j + b_{ij} + b_{i} + b_{sp(ij)} + \\varepsilon_{ijk}$\n-   $\\varepsilon_{ijk} \\sim N(0, 4)$\n-   $b_{i}\\sim N(0, .6^2)$\n-   $b_{ij}\\sim N(0,1.1^2)$\n-   $b_{sp(ij)} \\sim N_3(0, \\Sigma)$\n\n## Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nx1 <- c(1, 0.80, 0.10)\nx2 <- c(0.80, 1, 0.43)\nx3 <- c(0.10, 0.43, 1)\ncorr_x <- as.matrix(rbind(x1, x2, x3))\ncov_x <- 2.2^2 * corr_x \nspe_id <- rep(1:3, times = 5)\nspe_re <- rmvnorm(1, sigma = cov_x)\n\nrownames(corr_x) <- c(\"A\", \"B\", \"C\")\ncolnames(corr_x) <- c(\"A\", \"B\", \"C\")\n\ndf <- tibble()\nbeta0 <- 2\nbeta1 <- -1.56\nbeta2 <- -1.3\nt <- 0:3\n\nn <- 15\nnn <- 15\nj <- 1\n\nfor(i in 1:n){\n  xi <- rnorm(1, sd = .6)\n  for(ii in 1:nn){\n    b0 <- rnorm(1, sd = 1.1)\n    x.vec <- rmvnorm(1, sigma = diag(rep(1, 4))) |> as.vector()\n    y <- beta0 + beta1 * t + beta2 * x.vec + \n          b0 + xi + spe_re[spe_id[ii]] + rnorm(4, sd = 2) |> \n      as.vector()\n    df <- bind_rows(df,\n                    tibble(y = y, x = x.vec, t = t, \n                           id = i, id2 = ii, jid = j, \n                           spe = case_when(spe_id[ii] == 1 ~ \"A\",\n                                           spe_id[ii] == 2 ~ \"B\",\n                                           spe_id[ii] == 3 ~ \"C\")))\n    j <- j + 1\n  }\n}\n```\n:::\n\n\n\n## Bayesian Analysis in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nbrm(y ~ x + t + (1|jid) + (1|id) + (1|gr(spe, cov = A)),\n    data = df,\n    data2 = list(A = corr_x),\n    family = gaussian(),\n    prior = c(\n      prior(normal(0, 10), \"b\"),\n      prior(normal(0, 50), \"Intercept\"),\n      prior(student_t(3, 0, 20), \"sd\"),\n      prior(student_t(3, 0, 20), \"sigma\")\n    ),\n    control = list(adapt_delta = 0.99,\n                   max_treedepth = 20),\n    iter = 20000,\n    cores = 4)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}